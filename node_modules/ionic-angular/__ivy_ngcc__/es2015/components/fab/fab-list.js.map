{"version":3,"file":"fab-list.js","sources":["fab-list.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;WAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;oBAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ContentChildren, Directive, ElementRef, Renderer } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { isTrueProperty } from '../../util/util';\nimport { Platform } from '../../platform/platform';\nimport { FabButton } from './fab';\n/**\n * \\@name FabList\n * \\@description\n * `ion-fab-list` is a container for multiple FAB buttons. They are components of `ion-fab` and allow you to specificy the buttons position, left, right, top, bottom.\n * \\@usage\n *\n * ```html\n *  <ion-fab bottom right >\n *    <button ion-fab>Share</button>\n *    <ion-fab-list side=\"top\">\n *      <button ion-fab>Facebook</button>\n *      <button ion-fab>Twitter</button>\n *      <button ion-fab>Youtube</button>\n *    </ion-fab-list>\n *    <ion-fab-list side=\"left\">\n *      <button ion-fab>Vimeo</button>\n *    </ion-fab-list>\n *  </ion-fab>\n * ```\n * \\@module ionic\n *\n * \\@demo /docs/demos/src/fab/\n * @see {\\@link /docs/components#fab Fab Component Docs}\n */\nexport class FabList {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} config\n     * @param {?} _plt\n     */\n    constructor(_elementRef, _renderer, config, _plt) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._plt = _plt;\n        this._visible = false;\n        this._fabs = [];\n        this._mode = config.get('mode');\n    }\n    /**\n     * @param {?} query\n     * @return {?}\n     */\n    set _setbuttons(query) {\n        const /** @type {?} */ fabs = this._fabs = query.toArray();\n        const /** @type {?} */ className = `fab-${this._mode}-in-list`;\n        for (var /** @type {?} */ fab of fabs) {\n            fab.setElementClass('fab-in-list', true);\n            fab.setElementClass(className, true);\n        }\n    }\n    /**\n     * @hidden\n     * @param {?} val\n     * @return {?}\n     */\n    setVisible(val) {\n        let /** @type {?} */ visible = isTrueProperty(val);\n        if (visible === this._visible) {\n            return;\n        }\n        this._visible = visible;\n        let /** @type {?} */ fabs = this._fabs;\n        let /** @type {?} */ i = 1;\n        if (visible) {\n            fabs.forEach(fab => {\n                this._plt.timeout(() => fab.setElementClass('show', true), i * 30);\n                i++;\n            });\n        }\n        else {\n            fabs.forEach(fab => fab.setElementClass('show', false));\n        }\n        this.setElementClass('fab-list-active', visible);\n    }\n    /**\n     * \\@internal\n     * @param {?} className\n     * @param {?} add\n     * @return {?}\n     */\n    setElementClass(className, add) {\n        this._renderer.setElementClass(this._elementRef.nativeElement, className, add);\n    }\n}\nFabList.decorators = [\n    { type: Directive, args: [{\n                selector: 'ion-fab-list',\n            },] },\n];\n/**\n * @nocollapse\n */\nFabList.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: Config, },\n    { type: Platform, },\n];\nFabList.propDecorators = {\n    '_setbuttons': [{ type: ContentChildren, args: [FabButton,] },],\n};\nfunction FabList_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FabList.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    FabList.ctorParameters;\n    /** @type {?} */\n    FabList.propDecorators;\n    /** @type {?} */\n    FabList.prototype._visible;\n    /** @type {?} */\n    FabList.prototype._fabs;\n    /** @type {?} */\n    FabList.prototype._mode;\n    /** @type {?} */\n    FabList.prototype._elementRef;\n    /** @type {?} */\n    FabList.prototype._renderer;\n    /** @type {?} */\n    FabList.prototype._plt;\n}\n"]}