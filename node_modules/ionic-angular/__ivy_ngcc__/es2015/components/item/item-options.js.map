{"version":3,"file":"item-options.js","sources":["item-options.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;iLAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;oBAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { Platform } from '../../platform/platform';\nimport { isRightSide } from '../../util/util';\n/**\n * \\@name ItemOptions\n * \\@description\n * The option buttons for an `ion-item-sliding`. These buttons can be placed either on the left or right side.\n * You can combine the `(ionSwipe)` event plus the `expandable` directive to create a full swipe action for the item.\n *\n * \\@usage\n *\n * ```html\n * <ion-item-sliding>\n *   <ion-item>\n *     Item 1\n *   </ion-item>\n *   <ion-item-options side=\"right\" (ionSwipe)=\"saveItem(item)\">\n *     <button ion-button expandable (click)=\"saveItem(item)\">\n *       <ion-icon name=\"star\"></ion-icon>\n *     </button>\n *   </ion-item-options>\n * </ion-item-sliding>\n * ```\n */\nexport class ItemOptions {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _plt\n     */\n    constructor(_elementRef, _plt) {\n        this._elementRef = _elementRef;\n        this._plt = _plt;\n        /**\n         * \\@output {event} Emitted when the item has been fully swiped.\n         */\n        this.ionSwipe = new EventEmitter();\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    isRightSide() {\n        return isRightSide(this.side, this._plt.isRTL, true);\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    width() {\n        return this._elementRef.nativeElement.offsetWidth;\n    }\n}\nItemOptions.decorators = [\n    { type: Directive, args: [{\n                selector: 'ion-item-options',\n            },] },\n];\n/**\n * @nocollapse\n */\nItemOptions.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Platform, },\n];\nItemOptions.propDecorators = {\n    'side': [{ type: Input },],\n    'ionSwipe': [{ type: Output },],\n};\nfunction ItemOptions_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ItemOptions.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ItemOptions.ctorParameters;\n    /** @type {?} */\n    ItemOptions.propDecorators;\n    /**\n     * \\@input {string} The side the option button should be on. Defaults to `\"right\"`.\n     * If you have multiple `ion-item-options`, a side must be provided for each.\n     * @type {?}\n     */\n    ItemOptions.prototype.side;\n    /**\n     * \\@output {event} Emitted when the item has been fully swiped.\n     * @type {?}\n     */\n    ItemOptions.prototype.ionSwipe;\n    /** @type {?} */\n    ItemOptions.prototype._elementRef;\n    /** @type {?} */\n    ItemOptions.prototype._plt;\n}\n"]}