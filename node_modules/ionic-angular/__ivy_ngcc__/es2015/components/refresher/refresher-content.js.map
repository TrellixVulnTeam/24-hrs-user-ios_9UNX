{"version":3,"file":"refresher-content.js","sources":["refresher-content.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;qFAqBE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { Refresher } from './refresher';\n/**\n * @hidden\n */\nexport class RefresherContent {\n    /**\n     * @param {?} r\n     * @param {?} _config\n     */\n    constructor(r, _config) {\n        this.r = r;\n        this._config = _config;\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.pullingIcon) {\n            this.pullingIcon = this._config.get('ionPullIcon', 'arrow-down');\n        }\n        if (!this.refreshingSpinner) {\n            this.refreshingSpinner = this._config.get('ionRefreshingSpinner', this._config.get('spinner', 'ios'));\n        }\n    }\n}\nRefresherContent.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-refresher-content',\n                template: '<div class=\"refresher-pulling\">' +\n                    '<div class=\"refresher-pulling-icon\" *ngIf=\"pullingIcon\">' +\n                    '<ion-icon [name]=\"pullingIcon\"></ion-icon>' +\n                    '</div>' +\n                    '<div class=\"refresher-pulling-text\" [innerHTML]=\"pullingText\" *ngIf=\"pullingText\"></div>' +\n                    '</div>' +\n                    '<div class=\"refresher-refreshing\">' +\n                    '<div class=\"refresher-refreshing-icon\">' +\n                    '<ion-spinner [name]=\"refreshingSpinner\"></ion-spinner>' +\n                    '</div>' +\n                    '<div class=\"refresher-refreshing-text\" [innerHTML]=\"refreshingText\" *ngIf=\"refreshingText\"></div>' +\n                    '</div>',\n                host: {\n                    '[attr.state]': 'r.state'\n                },\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nRefresherContent.ctorParameters = () => [\n    { type: Refresher, },\n    { type: Config, },\n];\nRefresherContent.propDecorators = {\n    'pullingIcon': [{ type: Input },],\n    'pullingText': [{ type: Input },],\n    'refreshingSpinner': [{ type: Input },],\n    'refreshingText': [{ type: Input },],\n};\nfunction RefresherContent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RefresherContent.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    RefresherContent.ctorParameters;\n    /** @type {?} */\n    RefresherContent.propDecorators;\n    /**\n     * \\@input {string} a static icon to display when you begin to pull down\n     * @type {?}\n     */\n    RefresherContent.prototype.pullingIcon;\n    /**\n     * \\@input {string} the text you want to display when you begin to pull down\n     * @type {?}\n     */\n    RefresherContent.prototype.pullingText;\n    /**\n     * \\@input {string} An animated SVG spinner that shows when refreshing begins\n     * @type {?}\n     */\n    RefresherContent.prototype.refreshingSpinner;\n    /**\n     * \\@input {string} the text you want to display when performing a refresh\n     * @type {?}\n     */\n    RefresherContent.prototype.refreshingText;\n    /** @type {?} */\n    RefresherContent.prototype.r;\n    /** @type {?} */\n    RefresherContent.prototype._config;\n}\n"]}