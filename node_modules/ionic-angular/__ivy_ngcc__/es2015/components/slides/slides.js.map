{"version":3,"file":"slides.js","sources":["slides.js"],"names":[],"mappingsiDAaE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;osourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, NgZone, Optional, Output, Renderer, ViewEncapsulation } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { enableKeyboardControl } from './swiper/swiper-keyboard';\nimport { Ion } from '../ion';\nimport { isTrueProperty } from '../../util/util';\nimport { initEvents } from './swiper/swiper-events';\nimport { initZoom } from './swiper/swiper-zoom';\nimport { Platform } from '../../platform/platform';\nimport { destroySwiper, initSwiper, slideNext, slidePrev, slideTo, startAutoplay, stopAutoplay, update, } from './swiper/swiper';\nimport { SWIPER_EFFECTS } from './swiper/swiper-effects';\nimport { ViewController } from '../../navigation/view-controller';\n/**\n * \\@name Slides\n * \\@description\n * The Slides component is a multi-section container. Each section can be swiped\n * or dragged between. It contains any number of [Slide](../Slide) components.\n *\n *\n * ### Creating\n * You should use a template to create slides and listen to slide events. The template\n * should contain the slide container, an `<ion-slides>` element, and any number of\n * [Slide](../Slide) components, written as `<ion-slide>`. Basic configuration\n * values can be set as input properties, which are listed below. Slides events\n * can also be listened to such as the slide changing by placing the event on the\n * `<ion-slides>` element. See [Usage](#usage) below for more information.\n *\n *\n * ### Navigating\n * After creating and configuring the slides, you can navigate between them\n * by swiping or calling methods on the `Slides` instance. You can call `slideTo()` to\n * navigate to a specific slide, or `slideNext()` to change to the slide that follows\n * the active slide. All of the [methods](#instance-members) provided by the `Slides`\n * instance are listed below. See [Usage](#usage) below for more information on\n * navigating between slides.\n *\n *\n * \\@usage\n *\n * You can add slides to a `\\@Component` using the following template:\n *\n * ```html\n * <ion-slides>\n *   <ion-slide>\n *     <h1>Slide 1</h1>\n *   </ion-slide>\n *   <ion-slide>\n *     <h1>Slide 2</h1>\n *   </ion-slide>\n *   <ion-slide>\n *     <h1>Slide 3</h1>\n *   </ion-slide>\n * </ion-slides>\n * ```\n *\n * Next, we can use `ViewChild` to assign the Slides instance to\n * your `slides` property. Now we can call any of the `Slides`\n * [methods](#instance-members), for example we can use the Slide's\n * `slideTo()` method in order to navigate to a specific slide on\n * a button click. Below we call the `goToSlide()` method and it\n * navigates to the 3rd slide:\n *\n * ```ts\n * import { ViewChild } from '\\@angular/core';\n * import { Slides } from 'ionic-angular';\n *\n * class MyPage {\n *   \\@ViewChild(Slides) slides: Slides;\n *\n *   goToSlide() {\n *     this.slides.slideTo(2, 500);\n *   }\n * }\n * ```\n *\n * We can also add events to listen to on the `<ion-slides>` element.\n * Let's add the `ionSlideDidChange` event and call a method when the slide changes:\n *\n * ```html\n * <ion-slides (ionSlideDidChange)=\"slideChanged()\">\n * ```\n *\n * In our class, we add the `slideChanged()` method which gets the active\n * index and prints it:\n *\n * ```ts\n * class MyPage {\n *   ...\n *\n *   slideChanged() {\n *     let currentIndex = this.slides.getActiveIndex();\n *     console.log('Current index is', currentIndex);\n *   }\n * }\n * ```\n *\n * \\@advanced\n *\n * There are several options available to create customized slides. Ionic exposes\n * the most commonly used options as [inputs](http://learnangular2.com/inputs/).\n * In order to use an option that isn't exposed as an input the following code\n * should be used, where `freeMode` is the option to change:\n *\n * ```ts\n * import { ViewChild } from '\\@angular/core';\n * import { Slides } from 'ionic-angular';\n * class MyPage {\n *   \\@ViewChild(Slides) slides: Slides;\n *\n *   ngAfterViewInit() {\n *     this.slides.freeMode = true;\n *   }\n * }\n *\n * ```\n *\n * To see all of the available options, take a look at the\n * [source for slides](https://github.com/ionic-team/ionic/blob/master/src/components/slides/slides.ts).\n *\n * \\@demo /docs/demos/src/slides/\n * @see {\\@link /docs/components#slides Slides Component Docs}\n *\n * Adopted from Swiper.js:\n * The most modern mobile touch slider and framework with\n * hardware accelerated transitions.\n *\n * http://www.idangero.us/swiper/\n *\n * Copyright 2016, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n */\nexport class Slides extends Ion {\n    /**\n     * @param {?} config\n     * @param {?} _plt\n     * @param {?} zone\n     * @param {?} viewCtrl\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(config, _plt, zone, viewCtrl, elementRef, renderer) {\n        super(config, elementRef, renderer, 'slides');\n        this._plt = _plt;\n        this._control = null;\n        this._effectName = 'slide';\n        this._direction = 'horizontal';\n        this._initialSlide = 0;\n        this._isLoop = false;\n        this._pager = false;\n        this._paginationType = 'bullets';\n        /**\n         * @hidden\n         */\n        this.paginationBulletRender = null;\n        this._isParallax = false;\n        this._speedMs = 300;\n        this._isZoom = false;\n        /**\n         * @hidden\n         * Enabled this option and swiper will be operated as usual except it will\n         * not move, real translate values on wrapper will not be set. Useful when\n         * you may need to create custom slide transition.\n         */\n        this.virtualTranslate = false;\n        /**\n         * @hidden\n         * Set to true to round values of slides width and height to prevent blurry\n         * texts on usual resolution screens (if you have such)\n         */\n        this.roundLengths = false;\n        this._spaceBetween = 0;\n        this._slidesPerView = 1;\n        this._centeredSlides = false;\n        /**\n         * @hidden\n         */\n        this.slidesPerColumn = 1;\n        /**\n         * @hidden\n         */\n        this.slidesPerColumnFill = 'column';\n        /**\n         * @hidden\n         */\n        this.slidesPerGroup = 1;\n        /**\n         * @hidden\n         */\n        this.slidesOffsetBefore = 0;\n        /**\n         * @hidden\n         */\n        this.slidesOffsetAfter = 0;\n        /**\n         * @hidden\n         */\n        this.autoplayDisableOnInteraction = true;\n        /**\n         * @hidden\n         */\n        this.autoplayStopOnLast = false;\n        /**\n         * @hidden\n         */\n        this.freeMode = false;\n        /**\n         * @hidden\n         */\n        this.freeModeMomentum = true;\n        /**\n         * @hidden\n         */\n        this.freeModeMomentumRatio = 1;\n        /**\n         * @hidden\n         */\n        this.freeModeMomentumBounce = true;\n        /**\n         * @hidden\n         */\n        this.freeModeMomentumBounceRatio = 1;\n        /**\n         * @hidden\n         */\n        this.freeModeMomentumVelocityRatio = 1;\n        /**\n         * @hidden\n         */\n        this.freeModeSticky = false;\n        /**\n         * @hidden\n         */\n        this.freeModeMinimumVelocity = 0.02;\n        /**\n         * @hidden\n         */\n        this.autoHeight = false;\n        /**\n         * @hidden\n         */\n        this.setWrapperSize = false;\n        /**\n         * @hidden\n         */\n        this.zoomMax = 3;\n        /**\n         * @hidden\n         */\n        this.zoomMin = 1;\n        /**\n         * @hidden\n         */\n        this.zoomToggle = true;\n        /**\n         * @hidden\n         */\n        this.touchRatio = 1;\n        /**\n         * @hidden\n         */\n        this.touchAngle = 45;\n        /**\n         * @hidden\n         */\n        this.simulateTouch = true;\n        /**\n         * @hidden\n         */\n        this.shortSwipes = true;\n        /**\n         * @hidden\n         */\n        this.longSwipes = true;\n        /**\n         * @hidden\n         */\n        this.longSwipesRatio = 0.5;\n        /**\n         * @hidden\n         */\n        this.longSwipesMs = 300;\n        /**\n         * @hidden\n         */\n        this.followFinger = true;\n        /**\n         * @hidden\n         */\n        this.onlyExternal = false;\n        /**\n         * @hidden\n         */\n        this.threshold = 0;\n        /**\n         * @hidden\n         */\n        this.touchMoveStopPropagation = true;\n        /**\n         * @hidden\n         */\n        this.touchReleaseOnEdges = false;\n        /**\n         * @hidden\n         */\n        this.iOSEdgeSwipeDetection = false;\n        /**\n         * @hidden\n         */\n        this.iOSEdgeSwipeThreshold = 20;\n        /**\n         * @hidden\n         */\n        this.paginationClickable = false;\n        /**\n         * @hidden\n         */\n        this.paginationHide = false;\n        /**\n         * @hidden\n         */\n        this.resistance = true;\n        /**\n         * @hidden\n         */\n        this.resistanceRatio = 0.85;\n        /**\n         * @hidden\n         */\n        this.watchSlidesProgress = false;\n        /**\n         * @hidden\n         */\n        this.watchSlidesVisibility = false;\n        /**\n         * @hidden\n         */\n        this.preventClicks = true;\n        /**\n         * @hidden\n         */\n        this.preventClicksPropagation = true;\n        /**\n         * @hidden\n         */\n        this.slideToClickedSlide = false;\n        /**\n         * @hidden\n         */\n        this.loopAdditionalSlides = 0;\n        /**\n         * @hidden\n         */\n        this.loopedSlides = null;\n        /**\n         * @hidden\n         */\n        this.swipeHandler = null;\n        /**\n         * @hidden\n         */\n        this.noSwiping = true;\n        /**\n         * @hidden\n         */\n        this.runCallbacksOnInit = true;\n        // Controller\n        this.controlBy = 'slide';\n        this.controlInverse = false;\n        /**\n         * @hidden\n         */\n        this.keyboardControl = true;\n        /**\n         * @hidden\n         */\n        this.coverflow = {\n            rotate: 50,\n            stretch: 0,\n            depth: 100,\n            modifier: 1,\n            slideShadows: true\n        };\n        /**\n         * @hidden\n         */\n        this.flip = {\n            slideShadows: true,\n            limitRotation: true\n        };\n        /**\n         * @hidden\n         */\n        this.cube = {\n            slideShadows: true,\n            shadow: true,\n            shadowOffset: 20,\n            shadowScale: 0.94\n        };\n        /**\n         * @hidden\n         */\n        this.fade = {\n            crossFade: false\n        };\n        /**\n         * @hidden\n         */\n        this.prevSlideMessage = 'Previous slide';\n        /**\n         * @hidden\n         */\n        this.nextSlideMessage = 'Next slide';\n        /**\n         * @hidden\n         */\n        this.firstSlideMessage = 'This is the first slide';\n        /**\n         * @hidden\n         */\n        this.lastSlideMessage = 'This is the last slide';\n        /**\n         * \\@output {Slides} Emitted when a slide change starts.\n         */\n        this.ionSlideWillChange = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide change ends.\n         */\n        this.ionSlideDidChange = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide moves.\n         */\n        this.ionSlideDrag = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when slides reaches its beginning (initial position).\n         */\n        this.ionSlideReachStart = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when slides reaches its last slide.\n         */\n        this.ionSlideReachEnd = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide moves.\n         */\n        this.ionSlideAutoplay = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a autoplay starts.\n         */\n        this.ionSlideAutoplayStart = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a autoplay stops.\n         */\n        this.ionSlideAutoplayStop = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide change starts with the \"forward\" direction.\n         */\n        this.ionSlideNextStart = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide change starts with the \"backward\" direction.\n         */\n        this.ionSlidePrevStart = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide change ends with the \"forward\" direction.\n         */\n        this.ionSlideNextEnd = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when a slide change ends with the \"backward\" direction.\n         */\n        this.ionSlidePrevEnd = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when the user taps/clicks on the slide's container.\n         */\n        this.ionSlideTap = new EventEmitter();\n        /**\n         * \\@output {Slides} Emitted when the user double taps on the slide's container.\n         */\n        this.ionSlideDoubleTap = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.ionSlideProgress = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.ionSlideTransitionStart = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.ionSlideTransitionEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.ionSlideTouchStart = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.ionSlideTouchEnd = new EventEmitter();\n        this._unregs = [];\n        /**\n         * \\@internal\n         */\n        this._allowSwipeToNext = true;\n        /**\n         * \\@internal\n         */\n        this._allowSwipeToPrev = true;\n        this._zone = zone;\n        this.id = ++slidesId;\n        this.slideId = 'slides-' + this.id;\n        this.setElementClass(this.slideId, true);\n        // only initialize the slides whent the content is ready\n        if (viewCtrl) {\n            var subscription = viewCtrl.readReady.subscribe(() => {\n                subscription.unsubscribe();\n                this._initSlides();\n            });\n        }\n    }\n    /**\n     * \\@input {number} Delay between transitions (in milliseconds). If this\n     * parameter is not passed, autoplay is disabled. Default does\n     * not have a value and does not autoplay.\n     * Default: `null`.\n     * @return {?}\n     */\n    get autoplay() {\n        return this._autoplayMs;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set autoplay(val) {\n        this._autoplayMs = parseInt(val, 10);\n    }\n    /**\n     * \\@input {Slides} Pass another Slides instance or array of Slides instances\n     * that should be controlled by this Slides instance.\n     * Default: `null`.\n     * @return {?}\n     */\n    get control() {\n        return this._control;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set control(val) {\n        if (val instanceof Slides || Array.isArray(val)) {\n            this._control = val;\n        }\n    }\n    /**\n     * \\@input {string} The animation effect of the slides.\n     * Possible values are: `slide`, `fade`, `cube`, `coverflow` or `flip`.\n     * Default: `slide`.\n     * @return {?}\n     */\n    get effect() {\n        return this._effectName;\n    }\n    /**\n     * @param {?} effectName\n     * @return {?}\n     */\n    set effect(effectName) {\n        if (SWIPER_EFFECTS[effectName]) {\n            this._effectName = effectName;\n        }\n    }\n    /**\n     * \\@input {string}  Swipe direction: 'horizontal' or 'vertical'.\n     * Default: `horizontal`.\n     * @return {?}\n     */\n    get direction() {\n        return this._direction;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set direction(val) {\n        if (val === 'horizontal' || val === 'vertical') {\n            this._direction = val;\n        }\n    }\n    /**\n     * \\@input {number}  Index number of initial slide. Default: `0`.\n     * @return {?}\n     */\n    get initialSlide() {\n        return this._initialSlide;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set initialSlide(val) {\n        this._initialSlide = parseInt(val, 10);\n    }\n    /**\n     * \\@input {boolean} If true, continuously loop from the last slide to the\n     * first slide.\n     * @return {?}\n     */\n    get loop() {\n        return this._isLoop;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set loop(val) {\n        this._isLoop = isTrueProperty(val);\n    }\n    /**\n     * \\@input {boolean}  If true, show the pager.\n     * @return {?}\n     */\n    get pager() {\n        return this._pager;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set pager(val) {\n        this._pager = isTrueProperty(val);\n    }\n    /**\n     * \\@input {string} If dir attribute is equal to rtl, set interal _rtl to true;\n     * @param {?} val\n     * @return {?}\n     */\n    set dir(val) {\n        this._rtl = (val.toLowerCase() === 'rtl');\n    }\n    /**\n     * \\@input {string}  Type of pagination. Possible values are:\n     * `bullets`, `fraction`, `progress`. Default: `bullets`.\n     * (Note that the pager will not show unless `pager` input\n     * is set to true).\n     * @return {?}\n     */\n    get paginationType() {\n        return this._paginationType;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set paginationType(val) {\n        if (val === 'bullets' || val === 'fraction' || val === 'progress') {\n            this._paginationType = val;\n        }\n    }\n    /**\n     * \\@input {boolean} If true, allows you to use \"parallaxed\" elements inside of\n     * slider.\n     * @return {?}\n     */\n    get parallax() {\n        return this._isParallax;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set parallax(val) {\n        this._isParallax = isTrueProperty(val);\n    }\n    /**\n     * \\@input {number} Duration of transition between slides\n     * (in milliseconds). Default: `300`.\n     * @return {?}\n     */\n    get speed() {\n        return this._speedMs;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set speed(val) {\n        this._speedMs = parseInt(val, 10);\n    }\n    /**\n     * \\@input {boolean} If true, enables zooming functionality.\n     * @return {?}\n     */\n    get zoom() {\n        return this._isZoom;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set zoom(val) {\n        this._isZoom = isTrueProperty(val);\n    }\n    /**\n     * \\@input {number} Distance between slides in px. Default: `0`.\n     * @return {?}\n     */\n    get spaceBetween() {\n        return this._spaceBetween;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set spaceBetween(val) {\n        this._spaceBetween = parseInt(val, 10);\n    }\n    /**\n     * \\@input {number} Slides per view. Slides visible at the same time. Default: `1`.\n     * @return {?}\n     */\n    get slidesPerView() {\n        return this._slidesPerView;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set slidesPerView(val) {\n        this._slidesPerView = val === 'auto' ? 'auto' : parseFloat(val);\n    }\n    /**\n     * \\@input {boolean} Center a slide in the middle of the screen.\n     * @return {?}\n     */\n    get centeredSlides() {\n        return this._centeredSlides;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set centeredSlides(val) {\n        this._centeredSlides = isTrueProperty(val);\n    }\n    /**\n     * @return {?}\n     */\n    _initSlides() {\n        if (!this._init) {\n            (void 0) /* console.debug */;\n            var /** @type {?} */ s = this;\n            var /** @type {?} */ plt = s._plt;\n            s.container = this.getNativeElement().children[0];\n            // init swiper core\n            initSwiper(s, plt);\n            // init core event listeners\n            this._unregs.push(initEvents(s, plt));\n            if (this.zoom) {\n                // init zoom event listeners\n                this._unregs.push(initZoom(s, plt));\n            }\n            if (this.keyboardControl) {\n                // init keyboard event listeners\n                s.enableKeyboardControl(true);\n            }\n            this._init = true;\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._plt.timeout(() => {\n            this._initSlides();\n        }, 300);\n    }\n    /**\n     * Update the underlying slider implementation. Call this if you've added or removed\n     * child slides.\n     * @param {?=} debounce\n     * @return {?}\n     */\n    update(debounce = 300) {\n        if (this._init) {\n            this._plt.cancelTimeout(this._tmr);\n            this._tmr = this._plt.timeout(() => {\n                update(this, this._plt);\n                // Don't allow pager to show with > 10 slides\n                if (this.length() > 10) {\n                    this.paginationType = undefined;\n                }\n            }, debounce);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    resize() {\n        if (this._init) {\n        }\n    }\n    /**\n     * Transition to the specified slide.\n     *\n     * @param {?} index\n     * @param {?=} speed\n     * @param {?=} runCallbacks\n     * @return {?}\n     */\n    slideTo(index, speed, runCallbacks) {\n        slideTo(this, this._plt, index, speed, runCallbacks);\n    }\n    /**\n     * Transition to the next slide.\n     *\n     * @param {?=} speed\n     * @param {?=} runCallbacks\n     * @return {?}\n     */\n    slideNext(speed, runCallbacks) {\n        slideNext(this, this._plt, runCallbacks, speed, true);\n    }\n    /**\n     * Transition to the previous slide.\n     *\n     * @param {?=} speed\n     * @param {?=} runCallbacks\n     * @return {?}\n     */\n    slidePrev(speed, runCallbacks) {\n        slidePrev(this, this._plt, runCallbacks, speed, true);\n    }\n    /**\n     * Get the index of the active slide.\n     *\n     * @return {?}\n     */\n    getActiveIndex() {\n        return this._activeIndex;\n    }\n    /**\n     * Get the index of the previous slide.\n     *\n     * @return {?}\n     */\n    getPreviousIndex() {\n        return this._previousIndex;\n    }\n    /**\n     * Get the total number of slides.\n     *\n     * @return {?}\n     */\n    length() {\n        return this._slides.length;\n    }\n    /**\n     * Get whether or not the current slide is the last slide.\n     *\n     * @return {?}\n     */\n    isEnd() {\n        return this._isEnd;\n    }\n    /**\n     * Get whether or not the current slide is the first slide.\n     *\n     * @return {?}\n     */\n    isBeginning() {\n        return this._isBeginning;\n    }\n    /**\n     * Start auto play.\n     * @return {?}\n     */\n    startAutoplay() {\n        startAutoplay(this, this._plt);\n    }\n    /**\n     * Stop auto play.\n     * @return {?}\n     */\n    stopAutoplay() {\n        stopAutoplay(this);\n    }\n    /**\n     * Lock or unlock the ability to slide to the next slides.\n     * Set to false to unlock this behaviour.\n     * @param {?} shouldLockSwipeToNext\n     * @return {?}\n     */\n    lockSwipeToNext(shouldLockSwipeToNext) {\n        this._allowSwipeToNext = !shouldLockSwipeToNext;\n    }\n    /**\n     * Lock or unlock the ability to slide to the previous slides.\n     * Set to false to unlock this behaviour.\n     * @param {?} shouldLockSwipeToPrev\n     * @return {?}\n     */\n    lockSwipeToPrev(shouldLockSwipeToPrev) {\n        this._allowSwipeToPrev = !shouldLockSwipeToPrev;\n    }\n    /**\n     * Lock or unlock the ability to slide to change slides.\n     * False allows swiping in both directions.\n     * @param {?} shouldLockSwipes\n     * @return {?}\n     */\n    lockSwipes(shouldLockSwipes) {\n        this._allowSwipeToNext = this._allowSwipeToPrev = !shouldLockSwipes;\n    }\n    /**\n     * Enable or disable keyboard control.\n     * @param {?} shouldEnableKeyboard\n     * @return {?}\n     */\n    enableKeyboardControl(shouldEnableKeyboard) {\n        enableKeyboardControl(this, this._plt, shouldEnableKeyboard);\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._init = false;\n        this._unregs.forEach(unReg => {\n            unReg();\n        });\n        this._unregs.length = 0;\n        destroySwiper(this);\n        this.enableKeyboardControl(false);\n    }\n}\nSlides.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-slides',\n                template: '<div class=\"swiper-container\" [attr.dir]=\"_rtl? \\'rtl\\' : null\">' +\n                    '<div class=\"swiper-wrapper\">' +\n                    '<ng-content></ng-content>' +\n                    '</div>' +\n                    '<div [class.hide]=\"!pager\" class=\"swiper-pagination\"></div>' +\n                    '</div>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nSlides.ctorParameters = () => [\n    { type: Config, },\n    { type: Platform, },\n    { type: NgZone, },\n    { type: ViewController, decorators: [{ type: Optional },] },\n    { type: ElementRef, },\n    { type: Renderer, },\n];\nSlides.propDecorators = {\n    'autoplay': [{ type: Input },],\n    'control': [{ type: Input },],\n    'effect': [{ type: Input },],\n    'direction': [{ type: Input },],\n    'initialSlide': [{ type: Input },],\n    'loop': [{ type: Input },],\n    'pager': [{ type: Input },],\n    'dir': [{ type: Input },],\n    'paginationType': [{ type: Input },],\n    'parallax': [{ type: Input },],\n    'speed': [{ type: Input },],\n    'zoom': [{ type: Input },],\n    'spaceBetween': [{ type: Input },],\n    'slidesPerView': [{ type: Input },],\n    'centeredSlides': [{ type: Input },],\n    'ionSlideWillChange': [{ type: Output },],\n    'ionSlideDidChange': [{ type: Output },],\n    'ionSlideDrag': [{ type: Output },],\n    'ionSlideReachStart': [{ type: Output },],\n    'ionSlideReachEnd': [{ type: Output },],\n    'ionSlideAutoplay': [{ type: Output },],\n    'ionSlideAutoplayStart': [{ type: Output },],\n    'ionSlideAutoplayStop': [{ type: Output },],\n    'ionSlideNextStart': [{ type: Output },],\n    'ionSlidePrevStart': [{ type: Output },],\n    'ionSlideNextEnd': [{ type: Output },],\n    'ionSlidePrevEnd': [{ type: Output },],\n    'ionSlideTap': [{ type: Output },],\n    'ionSlideDoubleTap': [{ type: Output },],\n};\nfunction Slides_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Slides.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Slides.ctorParameters;\n    /** @type {?} */\n    Slides.propDecorators;\n    /** @type {?} */\n    Slides.prototype._autoplayMs;\n    /** @type {?} */\n    Slides.prototype._control;\n    /** @type {?} */\n    Slides.prototype._effectName;\n    /** @type {?} */\n    Slides.prototype._direction;\n    /** @type {?} */\n    Slides.prototype._initialSlide;\n    /** @type {?} */\n    Slides.prototype._isLoop;\n    /** @type {?} */\n    Slides.prototype._pager;\n    /** @type {?} */\n    Slides.prototype._paginationType;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.paginationBulletRender;\n    /** @type {?} */\n    Slides.prototype._isParallax;\n    /** @type {?} */\n    Slides.prototype._speedMs;\n    /** @type {?} */\n    Slides.prototype._isZoom;\n    /**\n     * @hidden\n     * Height of container.\n     * @type {?}\n     */\n    Slides.prototype.height;\n    /**\n     * @hidden\n     * Width of container.\n     * @type {?}\n     */\n    Slides.prototype.width;\n    /**\n     * @hidden\n     * Enabled this option and swiper will be operated as usual except it will\n     * not move, real translate values on wrapper will not be set. Useful when\n     * you may need to create custom slide transition.\n     * @type {?}\n     */\n    Slides.prototype.virtualTranslate;\n    /**\n     * @hidden\n     * Set to true to round values of slides width and height to prevent blurry\n     * texts on usual resolution screens (if you have such)\n     * @type {?}\n     */\n    Slides.prototype.roundLengths;\n    /** @type {?} */\n    Slides.prototype._spaceBetween;\n    /** @type {?} */\n    Slides.prototype._slidesPerView;\n    /** @type {?} */\n    Slides.prototype._centeredSlides;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slidesPerColumn;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slidesPerColumnFill;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slidesPerGroup;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slidesOffsetBefore;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slidesOffsetAfter;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.touchEventsTarget;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.autoplayDisableOnInteraction;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.autoplayStopOnLast;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeMode;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeMomentum;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeMomentumRatio;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeMomentumBounce;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeMomentumBounceRatio;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeMomentumVelocityRatio;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeSticky;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.freeModeMinimumVelocity;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.autoHeight;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.setWrapperSize;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.zoomMax;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.zoomMin;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.zoomToggle;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.touchRatio;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.touchAngle;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.simulateTouch;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.shortSwipes;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.longSwipes;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.longSwipesRatio;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.longSwipesMs;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.followFinger;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.onlyExternal;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.threshold;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.touchMoveStopPropagation;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.touchReleaseOnEdges;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.iOSEdgeSwipeDetection;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.iOSEdgeSwipeThreshold;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.paginationClickable;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.paginationHide;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.resistance;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.resistanceRatio;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.watchSlidesProgress;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.watchSlidesVisibility;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.preventClicks;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.preventClicksPropagation;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slideToClickedSlide;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.loopAdditionalSlides;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.loopedSlides;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.swipeHandler;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.noSwiping;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.runCallbacksOnInit;\n    /** @type {?} */\n    Slides.prototype.controlBy;\n    /** @type {?} */\n    Slides.prototype.controlInverse;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.keyboardControl;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.coverflow;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.flip;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.cube;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.fade;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.prevSlideMessage;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.nextSlideMessage;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.firstSlideMessage;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.lastSlideMessage;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.originalEvent;\n    /**\n     * \\@output {Slides} Emitted when a slide change starts.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideWillChange;\n    /**\n     * \\@output {Slides} Emitted when a slide change ends.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideDidChange;\n    /**\n     * \\@output {Slides} Emitted when a slide moves.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideDrag;\n    /**\n     * \\@output {Slides} Emitted when slides reaches its beginning (initial position).\n     * @type {?}\n     */\n    Slides.prototype.ionSlideReachStart;\n    /**\n     * \\@output {Slides} Emitted when slides reaches its last slide.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideReachEnd;\n    /**\n     * \\@output {Slides} Emitted when a slide moves.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideAutoplay;\n    /**\n     * \\@output {Slides} Emitted when a autoplay starts.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideAutoplayStart;\n    /**\n     * \\@output {Slides} Emitted when a autoplay stops.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideAutoplayStop;\n    /**\n     * \\@output {Slides} Emitted when a slide change starts with the \"forward\" direction.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideNextStart;\n    /**\n     * \\@output {Slides} Emitted when a slide change starts with the \"backward\" direction.\n     * @type {?}\n     */\n    Slides.prototype.ionSlidePrevStart;\n    /**\n     * \\@output {Slides} Emitted when a slide change ends with the \"forward\" direction.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideNextEnd;\n    /**\n     * \\@output {Slides} Emitted when a slide change ends with the \"backward\" direction.\n     * @type {?}\n     */\n    Slides.prototype.ionSlidePrevEnd;\n    /**\n     * \\@output {Slides} Emitted when the user taps/clicks on the slide's container.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideTap;\n    /**\n     * \\@output {Slides} Emitted when the user double taps on the slide's container.\n     * @type {?}\n     */\n    Slides.prototype.ionSlideDoubleTap;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.ionSlideProgress;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.ionSlideTransitionStart;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.ionSlideTransitionEnd;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.ionSlideTouchStart;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.ionSlideTouchEnd;\n    /**\n     * Private properties only useful to this class.\n     * ------------------------------------\n     * @type {?}\n     */\n    Slides.prototype._init;\n    /** @type {?} */\n    Slides.prototype._tmr;\n    /** @type {?} */\n    Slides.prototype._unregs;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.clickedIndex;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.clickedSlide;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.container;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.id;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.progress;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.realIndex;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.renderedHeight;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.renderedWidth;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.slideId;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.swipeDirection;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.velocity;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._activeIndex;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._allowClick;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._allowSwipeToNext;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._allowSwipeToPrev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._animating;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._autoplaying;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._autoplayPaused;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._autoplayTimeoutId;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._bullets;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._classNames;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._isBeginning;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._isEnd;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._keyboardUnReg;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._liveRegion;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._paginationContainer;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._previousIndex;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._renderedSize;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._rtl;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._slides;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._snapGrid;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._slidesGrid;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._snapIndex;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._slidesSizesGrid;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._spline;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._supportTouch;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._supportGestures;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._touches;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._touchEvents;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._touchEventsDesktop;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._translate;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._virtualSize;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._wrapper;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._zone;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Slides.prototype._zoom;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.nextButton;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Slides.prototype.prevButton;\n    /** @type {?} */\n    Slides.prototype._plt;\n}\nlet /** @type {?} */ slidesId = -1;\n"]}