{"version":3,"file":"tab-button.js","sources":["tab-button.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;mFAsBE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component, ElementRef, EventEmitter, HostListener, Input, Output, Renderer } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { Ion } from '../ion';\n/**\n * @hidden\n */\nexport class TabButton extends Ion {\n    /**\n     * @param {?} config\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(config, elementRef, renderer) {\n        super(config, elementRef, renderer);\n        this.ionSelect = new EventEmitter();\n        this.disHover = (config.get('hoverCSS') === false);\n        this.layout = config.get('tabsLayout');\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.tab.btn = this;\n        this.layout = this.tab.parent.tabsLayout || this.layout;\n        this.hasTitle = !!this.tab.tabTitle;\n        this.hasIcon = !!this.tab.tabIcon && this.layout !== 'icon-hide';\n        this.hasTitleOnly = (this.hasTitle && !this.hasIcon);\n        this.hasIconOnly = (this.hasIcon && !this.hasTitle);\n        this.hasBadge = !!this.tab.tabBadge;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.ionSelect.emit(this.tab);\n        return false;\n    }\n    /**\n     * @param {?} href\n     * @return {?}\n     */\n    updateHref(href) {\n        this.setElementAttribute('href', href);\n    }\n}\nTabButton.decorators = [\n    { type: Component, args: [{\n                selector: '.tab-button',\n                template: '<ion-icon *ngIf=\"tab.tabIcon\" [name]=\"tab.tabIcon\" [isActive]=\"tab.isSelected\" class=\"tab-button-icon\"></ion-icon>' +\n                    '<span *ngIf=\"tab.tabTitle\" class=\"tab-button-text\">{{tab.tabTitle}}</span>' +\n                    '<ion-badge *ngIf=\"tab.tabBadge\" class=\"tab-badge\" [color]=\"tab.tabBadgeStyle\">{{tab.tabBadge}}</ion-badge>' +\n                    '<div class=\"button-effect\"></div>',\n                host: {\n                    '[attr.id]': 'tab._btnId',\n                    '[attr.aria-controls]': 'tab._tabId',\n                    '[attr.aria-selected]': 'tab.isSelected',\n                    '[class.has-title]': 'hasTitle',\n                    '[class.has-icon]': 'hasIcon',\n                    '[class.has-title-only]': 'hasTitleOnly',\n                    '[class.icon-only]': 'hasIconOnly',\n                    '[class.has-badge]': 'hasBadge',\n                    '[class.disable-hover]': 'disHover',\n                    '[class.tab-disabled]': '!tab.enabled',\n                    '[class.tab-hidden]': '!tab.show',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nTabButton.ctorParameters = () => [\n    { type: Config, },\n    { type: ElementRef, },\n    { type: Renderer, },\n];\nTabButton.propDecorators = {\n    'tab': [{ type: Input },],\n    'ionSelect': [{ type: Output },],\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\nfunction TabButton_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TabButton.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TabButton.ctorParameters;\n    /** @type {?} */\n    TabButton.propDecorators;\n    /** @type {?} */\n    TabButton.prototype.disHover;\n    /** @type {?} */\n    TabButton.prototype.hasTitle;\n    /** @type {?} */\n    TabButton.prototype.hasIcon;\n    /** @type {?} */\n    TabButton.prototype.hasTitleOnly;\n    /** @type {?} */\n    TabButton.prototype.hasIconOnly;\n    /** @type {?} */\n    TabButton.prototype.hasBadge;\n    /** @type {?} */\n    TabButton.prototype.layout;\n    /** @type {?} */\n    TabButton.prototype.tab;\n    /** @type {?} */\n    TabButton.prototype.ionSelect;\n}\n"]}