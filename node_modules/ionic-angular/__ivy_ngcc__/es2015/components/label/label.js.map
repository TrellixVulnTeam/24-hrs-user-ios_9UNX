{"version":3,"file":"label.js","sources":["label.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;sKAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;oBAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Attribute, Directive, ElementRef, Input, Renderer } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { Ion } from '../ion';\n/**\n * \\@name Label\n * \\@description\n * Labels are placed inside of an `ion-item` element and can be used\n * to describe an `ion-input`, `ion-toggle`, `ion-checkbox`, and more.\n *\n * \\@property [fixed] - A persistent label that sits next the input.\n * \\@property [floating] - A label that will float above the input if the input is empty or loses focus.\n * \\@property [stacked] - A stacked label will always appear on top of the input.\n *\n * \\@usage\n * ```html\n *  <ion-item>\n *    <ion-label>Username</ion-label>\n *    <ion-input></ion-input>\n *  </ion-item>\n *\n *  <ion-item>\n *    <ion-label fixed>Website</ion-label>\n *    <ion-input type=\"url\"></ion-input>\n *  </ion-item>\n *\n *  <ion-item>\n *    <ion-label floating>Email</ion-label>\n *    <ion-input type=\"email\"></ion-input>\n *  </ion-item>\n *\n *  <ion-item>\n *    <ion-label stacked>Phone</ion-label>\n *    <ion-input type=\"tel\"></ion-input>\n *  </ion-item>\n *\n *  <ion-item>\n *    <ion-label>Toggle</ion-label>\n *    <ion-toggle></ion-toggle>\n *  </ion-item>\n *\n *  <ion-item>\n *    <ion-label>Checkbox</ion-label>\n *    <ion-checkbox></ion-checkbox>\n *  </ion-item>\n * ```\n *\n * \\@demo /docs/demos/src/label/\n * @see {\\@link ../../../../components#inputs Input Component Docs}\n * @see {\\@link ../../input/Input Input API Docs}\n *\n */\nexport class Label extends Ion {\n    /**\n     * @param {?} config\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} isFloating\n     * @param {?} isStacked\n     * @param {?} isFixed\n     * @param {?} isInset\n     */\n    constructor(config, elementRef, renderer, isFloating, isStacked, isFixed, isInset) {\n        super(config, elementRef, renderer, 'label');\n        this.type = (isFloating === '' ? 'floating' : (isStacked === '' ? 'stacked' : (isFixed === '' ? 'fixed' : (isInset === '' ? 'inset' : null))));\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set id(val) {\n        this._id = val;\n        if (val) {\n            this.setElementAttribute('id', val);\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    get text() {\n        return this.getNativeElement().textContent || '';\n    }\n}\nLabel.decorators = [\n    { type: Directive, args: [{\n                selector: 'ion-label'\n            },] },\n];\n/**\n * @nocollapse\n */\nLabel.ctorParameters = () => [\n    { type: Config, },\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['floating',] },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['stacked',] },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['fixed',] },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['inset',] },] },\n];\nLabel.propDecorators = {\n    'id': [{ type: Input },],\n};\nfunction Label_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Label.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Label.ctorParameters;\n    /** @type {?} */\n    Label.propDecorators;\n    /** @type {?} */\n    Label.prototype._id;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    Label.prototype.type;\n}\n"]}