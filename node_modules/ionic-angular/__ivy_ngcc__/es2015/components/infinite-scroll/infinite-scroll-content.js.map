{"version":3,"file":"infinite-scroll-content.js","sources":["infinite-scroll-content.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;wEAeE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;oBAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { InfiniteScroll } from './infinite-scroll';\n/**\n * @hidden\n */\nexport class InfiniteScrollContent {\n    /**\n     * @param {?} inf\n     * @param {?} _config\n     */\n    constructor(inf, _config) {\n        this.inf = inf;\n        this._config = _config;\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.loadingSpinner) {\n            this.loadingSpinner = this._config.get('infiniteLoadingSpinner', this._config.get('spinner', 'ios'));\n        }\n    }\n}\nInfiniteScrollContent.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-infinite-scroll-content',\n                template: '<div class=\"infinite-loading\">' +\n                    '<div class=\"infinite-loading-spinner\" *ngIf=\"loadingSpinner\">' +\n                    '<ion-spinner [name]=\"loadingSpinner\"></ion-spinner>' +\n                    '</div>' +\n                    '<div class=\"infinite-loading-text\" [innerHTML]=\"loadingText\" *ngIf=\"loadingText\"></div>' +\n                    '</div>',\n                host: {\n                    '[attr.state]': 'inf.state'\n                },\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nInfiniteScrollContent.ctorParameters = () => [\n    { type: InfiniteScroll, },\n    { type: Config, },\n];\nInfiniteScrollContent.propDecorators = {\n    'loadingSpinner': [{ type: Input },],\n    'loadingText': [{ type: Input },],\n};\nfunction InfiniteScrollContent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InfiniteScrollContent.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InfiniteScrollContent.ctorParameters;\n    /** @type {?} */\n    InfiniteScrollContent.propDecorators;\n    /**\n     * \\@input {string} An animated SVG spinner that shows while loading.\n     * @type {?}\n     */\n    InfiniteScrollContent.prototype.loadingSpinner;\n    /**\n     * \\@input {string} Optional text to display while loading.\n     * @type {?}\n     */\n    InfiniteScrollContent.prototype.loadingText;\n    /** @type {?} */\n    InfiniteScrollContent.prototype.inf;\n    /** @type {?} */\n    InfiniteScrollContent.prototype._config;\n}\n"]}